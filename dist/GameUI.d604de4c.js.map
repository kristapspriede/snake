{"version":3,"sources":["../src/engine/Configuration.ts","../src/engine/Cell.ts","../src/engine/Grid.ts","../src/engine/Snake.ts","../src/engine/Game.ts","../src/GameUI.ts"],"names":[],"mappings":";;AKAA;;AAMA;;AAEA,ALRO,IKQD,ALRO,SKQE,GAAG,EAAlB,ELR6B,GAAG,EAAzB;AKSP,AJTA,AGAA,AFAA,ACAA,IESM,AJTN,IAAA,CISW,GAAG,GAAd;AJTA,ADCO,IAAM,cAAc,GAAG,EAAvB;AKUP,AJXA,AGCA,AFEA,ACCA,IEOA,AHRA,ACCA,IDDA,CCCA,CEOA,EJXA;AIWA,AJPE,ADFK,AECP,ACCA,IHFa,KAAK,ECEhB,CDFmB,GCEnB,ADFK,CCEO,CAAZ,EAAuB,CAAvB,EAAgC;AIOlC,AJNI,AGHJ,AFCA,ACCA,SFCS,CAAL,EIMJ,AHRA,ACCA,CFCa,CAAT;AIUF,AJTE,ADHG,AESL,ACRF,IHDa,KCGJ,CAAL,CISF,AHHA,ACRF,EFEa,ADHS,CCGlB,CCMF,CFTuB,AESX,ACRd,CEWE,CAAY,ALZP,CGCP,KEWE,EAAuC,GHHvC,CGGA,CHHwC,CGGS;AAC/C,AJTD,AGFH,AFAE,ACAF,ICAA,IAAA,CCWS,AHXP,ACAF,IAAA,EEWI,AHXF,CCAK,EEWW,AHXP,CACP,CCDO,GDCH,CGUJ,MFXG,CAAS,CAAT,CDCH,CAAS,ACDM,CAAZ,CAAP,EDCiB,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAc,EAAzB,CAAT,EAAuC,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAc,EAAzB,CAAvC,CADO,EAEP,IAAI,UAAJ,CAAS,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAc,EAAzB,CAAT,EAAuC,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAc,EAAzB,CAAvC,CAFO,EAGP,IAAI,UAAJ,CAAS,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAc,EAAzB,CAAT,EAAuC,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAc,EAAzB,CAAvC,CAHO,EAIP,IAAI,UAAJ,CAAS,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAc,EAAzB,CAAT,EAAuC,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAc,EAAzB,CAAvC,CAJO,EAKP,IAAI,UAAJ,CAAS,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAc,EAAzB,CAAT,EAAuC,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAc,EAAzB,CAAvC,CALO,CAAT;AGYE,ADZJ,AFQI,ACPJ,SEWS,AHJA,ACPT,IEWI,AFXJ,GEWgB,AFXT,CAAC,GEWJ,CFXQ,CDOR,GAAqB,MCPjB,CAAS,CAAT,EAAY,CAAZ,CAAD,CDOH,CCPoB,IAAI,UAAJ,CAAS,CAAT,EAAY,CAAZ,CAAjB,CAAP;AEYI,AJVJ,AGHA,AFSG,ACPH,IEWI,KJVJ,AEDA,GCFA,CHGA,SEDA,GEWyB,AFXE,CEWD,KAAK,AFX/B,IEW0B,CAAU,IAAV,CAAe,IAAf,CAAD,CAArB;AAEA,AJpBJ,AGcE,ADNF,CFRA,EAAA,CIoBI,KFZJ,CEYU,CAAC,ADNT,IAAA,CAAY,EDNd,GAAuB,MEYnB,CAAwB,AFZ5B,CCME,EAAwC,MCMtC,EAAmC,KAAK,SAAL,CAAe,IAAf,CAAoB,IAApB,CAAnC,EAA8D,KAA9D;AACA,ADfM,AFUR,ACPF,EDOE,EGKE,EHLF,CAAA,EEVQ,ADGV,CEYU,CAAC,GDfD,ECeN,AHLF,CEVwB,AFUxB,ACPF,CCHU,EDGC,CDOT,ACPF,GDOE,YAAA;AGMC,ADfO,AFUN,AC0DH,SCpES,AFUD,IAAI,GEVH,EFUQ,CEVW,EFUR,CAAjB,EEVM,AFUe,KAAK,GAAG,CAA7B,EAAgC,KAAK,EAArC,EAAyC;AELpC,AFMH,SENG,CFMC,CAAC,GAAG,GENL,CFMS,CAAC,CENC,EAAX,EFMK,CAAW,IAAI,CAAC,MAAL,KAAgB,EAA3B,CAAR;AGMJ,ADTE,AFIE,ACNJ,EEWA,AFXA,KAAA,CEWA,AFXA,CEWA,ADTO,CFIC,CAAC,GAAG,GCNZ,CEWA,AHLgB,ACNhB,CEWA,AHLiB,GEJf,CCSF,CHLY,CEJW,AFIA,CGKvB,GHL2B,CAAC,ACN5B,GAAA,GEWK,AHLkB,EEJrB,ECSF,CHLuC,CGKtB,CHLL,ACNC,CDMT,QCNJ,EAAiC;AEY/B,ADTA,AFIE,ACNF,QEWM,AFXF,CCEC,EFIE,ECNE,CCET,CCSa,EDTA,AFIX,CGKc,AHLF,GEJG,CFIf,ACNE,CEWiB,AHLF,IAAI,ACNA,EEWP,CAAY,GDTf,CDFT,CCEJ,EFImB,CAAS,ACNM,CDMf,CGKH,CAAuB,AHLR,CAAZ,CAAjB,EGKc,CAAhB,CFX2C,KAAK,MAAhD,EAAwD;ACGxD,AFID,ACNG,SCEG,EDFE,ECEP,GAAY,IAAI,ADFd,GAAiB,KAAK,ECEZ,CAAS,KAAK,CDFxB,YCEU,CAAZ;ACSA,ADRA,AFKD,ACPE,GDAH,ECFE,GEYI,CDRC,EDFC,EEUG,EFVC,EEUN,ADRJ,CCQc,EDRE,ADFD,CCEf,QDFU,CEUN,CAAuB,GFVE,CEUzB,CAAJ,EAAkC,EFVxB,IAA6B,SAAS,KAAK,OAA/C,EAAwD;AEW5D,ADRF,ADFE,SCEG,ECQE,AFVA,KCEP,GAAe,CDFb,GCEF,ADFmB,EEUjB,CAAoB,EFVE,KEUtB,IFVA;AEWA,ADRF,AFKF,ACPG,EDOH,GCTQ,CDSR,CAAA,EELO,ECQE,AFVD,IAAI,CDOZ,CELE,AFKF,EGGI,CAAc,AFVD,OEUb,EFVQ,CDOZ,GAAA,CCP+B,IAAnB,IAA2B,CDOzB,IAAd,EAAwB,ECPwB,KAAK,MAA7C,EAAqD;AEWzD,ADPH,AFIC,ACPE,WEUK,AHHA,ACPA,KDOK,IGGV,AFVA,CEUe,CHHV,CAAY,ACPA,IDOZ,CGGL,AHHsB,ACPA,SAAtB,CDOsB,KAAA,EAAK;AGI3B,AHJ8B,ACN/B,KAFK,MEYC,AFVD,EDM0B,ECNtB,GDM2B,CAAC,CGIpC,AHJ8B,ACNjB,CEUE,IHJ2B,GGI1C,CHJ8C,ACNtC,CDMuC,CAAjB,GCNH,CDMyB,KAAK,ACNjD,CDMkD,CAAN,ECNf,GDM2B,IAAI,CAAC,CAAvC,ACNgB,KAAK,IAA/C,EAAqD;AEWzD,ADPJ,AFE0E,ACLtE,ECGJ,GFES,CEFT,CAAA,ICOS,AHLuE,ACLvE,KCGT,CAAA,GCOI,AHLF,ACLE,CEUe,EFVE,ECGrB,GCOI,ADPJ,ADH0B,SAAtB,GCGJ;ACQI,ADPF,AFED,ACLE,GDGH,ECLQ,MEYC,ADPA,ADFR,KCEa,ADFR,KESF,ADPF,CCOkB,GFTnB,GAAiB,CESd,QFTH;AEUG,ADPH,ADFA,GCAD,ADXA,QEoBS,IAAL,CAAU,MAAV,CAAiB,IAAjB;AACD,AHLH,EAAA,IAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAY,IAAZ,EAAsB;AEDtB,AFGE,ACLF,ECEA,ADFA,ICEA,CAAA,ADFA,CDKQ,ACLR,KDKa,GEHb,AFGgB,CEHhB,ADFA,CAAA,GDKqB,CCLrB,GAAA,EDKgB,CAAY,IAAZ,CEHhB,AFGiC,GEHjC,CDFA,MDKiC,KEHjC,AFGiC,EAAK;AGIpC,ADNA,AFEuC,ACHvC,IEOA,KFPK,ECCE,EFEgC,ACHvC,CAAU,ECCE,EFEgC,ACH5C,CDG6C,ACH9B,CDGwB,ICHnB,CEOC,AHJ8B,CGI7B,EFPtB,CCCA,AFEuD,CAAC,CGI7B,AHJY,IGIjB,AHJuC,CGI7B,IAAV,AHJ4C,CGI7B,AHJ8B,CAAN,GGIvC,CAAD,CAArB,AHJyE,IAAI,CAAC,CAAvC;AGKxC,ADNA,AFCgF,GGPjF,ADIA,EFGgB,CAAd;AACA,ACFA,QDEM,ACFH,CDEI,GAAG,CCFF,IDEO,ICFZ,EDEO,CAAY,ACFH,KAAK,EDEd,CAAoB,CCFX,CAAU,GDEnB,CAAV,ECFA,EAAqC;AEQvC,ADNA,AFCE,ACFE,EEOJ,ADNA,IAAA,CAAA,CCMA,CAAA,AHLO,ECFE,IDEP,ACFE,CCCJ,AFCc,ACFA,CCCd,CCMA,CAAA,EFPI,CDEF,CAAmB,CAAnB,EAAqB,CAArB,EEDF,GAAA,CCMA,GAAA,MDNa,ICME,ADNf,EAAyB,KCMzB,EAAgD;AACxC,ADNN,AFCD,ACFE,GDHH,KGUQ,EAAA,CDNC,ECMD,GDNM,ECMN,IAAA,CAAA,ADNC,IAAgB,IAAI,IAAI,ICMzB,CDN8B,CCM9B,ODNN;ACMM,ADLP,GAFD,KCOU,KAAA,GAAA,EAAA,CAAA,KAAF;AAAA,AHHR,ACDE,EDCF,IAAA,CAAA,CGGiB,IFJR,EEIQ,EHHjB,CGGiB,AHHjB,ACDc,EEIG,CAAA,GHHjB,GGGQ,AHHR,ACDE,YDCF;AEAA,AFCE,ACAE,ECDJ,IAAA,CAAA,IFCS,ACAA,KCDT,AFCc,CEDd,CDCI,IDAK,CEDT,AFCqB,GEDrB,GFCS,IAAsB,CAA7B,EEDK,IAAP,EAAmB;ACKjB,ADJA,AFCD,ACAO,GDFR,CGKE,KDJK,ECIE,CAAC,CFHG,ICDX,ADCM,GCDU,ADCE,CEGlB,GAAoB,ADJA,ADCE,GCDC,KAAK,CCI5B,CFHkB,CAAS,KAAK,IAAL,CCDJ,ADCc,CCDK,ADCf,GAAc,CAAvB,CCDlB,CDC4C,KAAK,IAAL,CAAU,CAApC,CAAZ;AEIN,ADHA,ADAM,IEGN,KDHK,ECGE,CAAC,EDHR,CAAW,IAAX,CCGA,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,KAAvB,EAA8B,MAA9B;AACD,AHHD,EAAA,CGFA,GHEA,CAAA,SAAA,CAAA,SAAA,GAAA,YAAA;AECE,AFAA,ACDE,WDCK,ACDA,CCCC,IFAI,CEAC,ADDX,KDCF,KEAQ,EAAR;ACIF,ADHI,AFAH,ACDO,EEIR,CHLA,KGKA,CAAA,EDHS,CAAC,CAAN,ADDS,IAAL,CEIR,CAAA,CFJoB,IAAI,IEIxB,GAAA,GFJoB,CAAS,KAAK,CEIxB,GFJmB,CAAU,CAAnB,EEIpB,AFJ0C,EEIC,GFJI,IAAL,CAAU,CAAV,GAAc,CAApC,CAAZ;AEKA,ADHF,ADDE,QEIA,EAAA,GAAA,ADHG,GAAL,ECGE,IAAA,CAAA,gBAAA,EAAA;AAAA,ADFF,AFDR,QGGY,CHHZ,IGGY,AHHZ,GGGY,EAAA,CAAA,KAAF;AAAA,AH3CV,ACwCM,CDxCN,EAAA,KG2CmB,GFHR,GEGQ,CFHb,EEGa,EAAA,CAAA,MAAT;ADDJ,ADDI,WCCC,CAAL,CDDS,IAAL,GAAY,IAAI,UAAJ,CAAS,KAAK,IAAL,CAAU,CAAnB,EAAsB,KAAK,IAAL,CAAU,CAAV,GAAc,CAApC,CAAZ;AEIN,ADFI,ADDE,IEGN,OAAO,CAAC,CDFC,GCET,EDFI,CCEW,ADFA,IAAX,ECEiB,GAAG,GAAT,GAAe,WAA9B;AACA,ADFI,ICEJ,OAAO,CAAC,CDFC,KAAL,IAAc,ECElB,CDFI,ECEmB,QAAvB;AACA,ADFI,ADFF,IEIF,OAAO,AFJA,CEIC,CDFC,IAAL,ADFF,CCEY,GCEd,GAAoB,KDFhB,CAAsB,ECE1B,GDF+B,KAAL,CAAW,OAAX,EAAtB;ACGJ,AFJM,IEIN,OAAO,CAAC,CFJG,IAAL,GAAY,CEIlB,GAAoB,AF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","file":"GameUI.d604de4c.js","sourceRoot":"..\\static","sourcesContent":["export const CELLS_HORIZONTAL = 80;\r\nexport const CELLS_VERTICAL = 40;\r\nexport const SPEED = 100;\r\nexport const MAX_LEVEL = 10;\r\n\r\nexport interface Configuration {\r\n  level: number;\r\n  speed: number;\r\n  nbCellsX: number;\r\n  nbCellsY: number;\r\n  width: number;\r\n  height: number;\r\n  cellWidth: number;\r\n  cellHeight: number;\r\n  apples: number;\r\n}\r\n","export class Cell {\r\n  x: number;\r\n  y: number;\r\n\r\n  constructor(x: number, y: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n}\r\n","import { Cell } from \"./Cell\";\r\nimport { Configuration } from \"./Configuration\";\r\n\r\nexport class Grid {\r\n  private configuration: Configuration;\r\n  apples = [\r\n    new Cell(Math.floor(Math.random()*80), Math.floor(Math.random()*40)),\r\n    new Cell(Math.floor(Math.random()*80), Math.floor(Math.random()*40)),\r\n    new Cell(Math.floor(Math.random()*80), Math.floor(Math.random()*40)),\r\n    new Cell(Math.floor(Math.random()*80), Math.floor(Math.random()*40)),\r\n    new Cell(Math.floor(Math.random()*80), Math.floor(Math.random()*40))\r\n  ];\r\n  constructor(configuration: Configuration) {\r\n    this.configuration = configuration;\r\n  }\r\n\r\n  seed(): void {\r\n    for (let count = 0;  count < 5; count++) {\r\n      let x = Math.floor(Math.random() * 80);\r\n      let y = Math.floor(Math.random() * 40); \r\n      this.apples.push(new Cell(x, y));\r\n  }\r\n    \r\n  }\r\n\r\n  isAppleInside(cell: Cell): boolean {\r\n    return this.apples.find(apple =>apple.x === cell.x && apple.y === cell.y) !== undefined\r\n  }\r\n\r\n  removeApple(cell: Cell): void {\r\n    \r\n    const apple = this.apples.find(apple =>apple.x === cell.x && apple.y === cell.y)!\r\n    const i = this.apples.indexOf(apple)\r\n    this.apples.splice(i,1)\r\n  }\r\n\r\n  isDone(): boolean {\r\n    return this.apples.length == 0;\r\n  }\r\n\r\n  getApples(): Cell[] {\r\n    return this.apples\r\n  }\r\n}\r\n","import { Cell } from \"./Cell\";\r\nimport { Direction } from \"./Direction\";\r\nimport { summarizers } from \"istanbul-lib-report\";\r\n\r\nexport class Snake {\r\nhead = new Cell(2, 0); \r\ntail = [new Cell(0, 0), new Cell(1, 0)];\r\nold_direction: Direction = 'Down'\r\ndirection: Direction = 'Right'\r\ntailSize = 2\r\n\r\n\r\n\r\n  setDirection(direction: Direction) {\r\n    if (this.direction === 'Right' && direction === 'Left') {\r\n      this.direction = this.direction\r\n    }else if (this.direction === 'Left' && direction === 'Right') {\r\n      this.direction = this.direction\r\n    }else if (this.direction === 'Up' && direction === 'Down') {\r\n      this.direction = this.direction\r\n    }else if (this.direction === 'Down' && direction === 'Up') {\r\n      this.direction = this.direction\r\n    } else\r\n\t\t\tthis.direction = direction;\r\n  }\r\n\r\n  move() {\r\n\r\n    this.tail.push(this.head)\r\n\r\n    if(this.tailSize < this.tail.length) {\r\n      this.tail.shift()\r\n    }\r\n    \r\n    \r\n    switch(this.direction) {\r\n     \r\n      case 'Right':\r\n          this.head = new Cell(this.head.x + 1, this.head.y)\r\n          break\r\n      case 'Down':\r\n          this.head = new Cell(this.head.x, this.head.y + 1)\r\n          break\r\n      case 'Up':\r\n          this.head = new Cell(this.head.x, this.head.y - 1)\r\n          break\r\n      case 'Left':\r\n          this.head = new Cell(this.head.x -1, this.head.y)\r\n          break\r\n    }\r\n  }\r\n\r\n  grow() {\r\n    this.tailSize += 3\r\n  }\r\n\r\n  getHead(): Cell {\r\n    return this.head;\r\n  }\r\n\r\n  isSnake(cell: Cell) {\r\n    return this.tail.find(el => cell.x == el.x && cell.y == el.y);\r\n    //return false;\r\n  }\r\n\r\n  getDirection(): Direction {\r\n\r\n    return this.direction\r\n  }\r\n\r\n  getTail(): Cell[] {\r\n    return this.tail;\r\n  }\r\n  \r\n \r\n}\r\n","import { Grid } from \"./Grid\";\r\nimport { Snake } from \"./Snake\";\r\nimport { Configuration, MAX_LEVEL } from \"./Configuration\";\r\nimport { Cell } from \"./Cell\";\r\n\r\nexport class Game {\r\n  private score: number = 0;\r\n  private running: boolean = false;\r\n  private grid: Grid;\r\n  private snake: Snake;\r\n  public configuration: Configuration;\r\n  private nextTick: number;\r\n  public movement = []\r\n\r\n  constructor(configuration: Configuration) {\r\n    this.configuration = configuration;\r\n    this.snake = new Snake();\r\n    this.grid = new Grid(this.configuration);\r\n    this.nextTick = 0;\r\n    this.running = true;\r\n    this.movement\r\n    \r\n  }\r\n\r\n  getSnake(): Snake {\r\n    return this.snake;\r\n  }\r\n\r\n  getConfiguration() {\r\n    return this.configuration;\r\n  }\r\n\r\n  shouldUpdate(time: number): boolean {\r\n    return this.running && time >= this.nextTick;\r\n  }\r\n\r\n  update(time: number) {\r\n    this.nextTick = time + this.configuration.speed;\r\n\r\n    this.snake.move();\r\n\r\n    switch (this.checkState()) {\r\n      case -1:\r\n        this.die();\r\n        break;\r\n      case 1:\r\n        this.snake.grow();\r\n        this.score += 100;\r\n        this.grid.removeApple(this.snake.getHead());\r\n        if (this.grid.isDone()) {\r\n          this.levelUp();\r\n        }\r\n    }\r\n  }\r\n\r\n  checkState() {\r\n    const cell = this.snake.getHead();\r\n\r\n    // left the play area or ate itself??\r\n    if (this.isOutside(cell) || this.snake.isSnake(cell)) {\r\n      // dead\r\n      return -1;\r\n    }\r\n\r\n    // ate apple?\r\n    if (this.grid.isAppleInside(cell)) {\r\n      return 1;\r\n    }\r\n\r\n    // nothing special\r\n    return 0;\r\n  }\r\n\r\n  levelUp() {\r\n    this.score += 1000;\r\n    this.configuration.level++;\r\n    if (this.configuration.level < MAX_LEVEL) {\r\n      this.configuration.speed -= 7;\r\n      this.grid.seed();\r\n    } else {\r\n      this.win();\r\n    }\r\n  }\r\n\r\n  win() {\r\n    this.stop();\r\n  }\r\n\r\n  die() {\r\n    \r\n    this.stop();\r\n  }\r\n\r\n  isOutside(cell: Cell) {\r\n    const { nbCellsX, nbCellsY } = this.configuration;\r\n    return cell.x < 0 || cell.x >= nbCellsX || cell.y < 0 || cell.y >= nbCellsY;\r\n  }\r\n\r\n  getScore(): number {\r\n    return this.score;\r\n  }\r\n\r\n  getGrid(): Grid {\r\n    return this.grid;\r\n  }\r\n\r\n  stop() {\r\n    this.running = false;\r\n  }\r\n}\r\n","import {\r\n  Configuration,\r\n  CELLS_HORIZONTAL,\r\n  CELLS_VERTICAL,\r\n  SPEED\r\n} from \"./engine/Configuration\";\r\nimport { Game } from \"./engine/Game\";\r\n\r\nconst CELL_SIZE = 20;\r\nconst SCALE = 2.0;\r\n\r\nclass GameUI {\r\n  private canvas: HTMLCanvasElement;\r\n  private game: Game;\r\n\r\n  constructor(canvas: HTMLCanvasElement, game: Game) {\r\n    this.canvas = canvas;\r\n    this.game = game;\r\n    requestAnimationFrame(this.draw.bind(this));\r\n\r\n    window.addEventListener(\"keydown\", this.onKeyDown.bind(this), false);\r\n    window.focus();\r\n  }\r\n\r\n  draw(time: number) {\r\n    const context = this.canvas.getContext(\"2d\")!;\r\n    if (this.game.shouldUpdate(time)) {\r\n      this.drawBackground(context);\r\n      this.drawGrid(context);\r\n      this.drawBrand(context);\r\n      this.drawScore(context);\r\n      this.drawSnake(context);\r\n      this.drawApples(context);\r\n      this.game.update(time);\r\n    }\r\n    requestAnimationFrame(this.draw.bind(this));\r\n  }\r\n\r\n  drawBackground(context: CanvasRenderingContext2D) {\r\n    const { width, height } = this.game.getConfiguration();\r\n\r\n    context.fillStyle = \"#4caf50\";\r\n    context.fillRect(0, 0, width, height);\r\n  }\r\n\r\n  drawBrand(context: CanvasRenderingContext2D) {\r\n    const { width, height } = this.game.getConfiguration();\r\n\r\n    context.font = height / 2.5 + \"px Roboto\";\r\n    context.textBaseline = \"middle\";\r\n    context.textAlign = \"center\";\r\n    context.fillStyle = \"rgba(255,255,255,0.75)\";\r\n    context.fillText(\"CODELEX\", width / 2, height / 2);\r\n  }\r\n\r\n  drawScore(context: CanvasRenderingContext2D) {\r\n    context.font = 35 * SCALE + \"px Arial\";\r\n    context.textAlign = \"left\";\r\n    context.textBaseline = \"top\";\r\n    context.fillStyle = \"rgba(255,255,255,0.75)\";\r\n    context.fillText(game.getScore().toString(), 10 * SCALE, 10 * SCALE);\r\n  }\r\n\r\n  drawGrid(context: CanvasRenderingContext2D) {\r\n    const game = this.game;\r\n    const { width, height, cellWidth, cellHeight } = game.getConfiguration();\r\n    const lineWidth = 1 * SCALE;\r\n\r\n    context.strokeStyle = \"rgba(255,255,255,0.95)\";\r\n    context.lineWidth = lineWidth;\r\n\r\n    for (let x = 0; x <= width; x += cellWidth) {\r\n      context.beginPath();\r\n      context.moveTo(x, 0);\r\n      context.lineTo(x, height);\r\n      context.stroke();\r\n    }\r\n\r\n    for (let y = 0; y <= height; y += cellHeight) {\r\n      context.beginPath();\r\n      context.moveTo(0, y);\r\n      context.lineTo(width, y);\r\n      context.stroke();\r\n    }\r\n  }\r\n\r\n  drawApples(context: CanvasRenderingContext2D) {\r\n    const { cellWidth, cellHeight } = game.getConfiguration();\r\n    const lineWidth = 1 * SCALE;\r\n\r\n    context.fillStyle = \"#e91e63\";\r\n    const apples = game.getGrid().getApples();\r\n    apples.forEach(cell =>\r\n      context.fillRect(\r\n        cellWidth * cell.x + lineWidth,\r\n        cellHeight * cell.y + lineWidth,\r\n        cellWidth - lineWidth * 2,\r\n        cellHeight - lineWidth * 2\r\n      )\r\n    );\r\n  }\r\n\r\n  drawSnake(context: CanvasRenderingContext2D) {\r\n    const snake = this.game.getSnake();\r\n    const { cellWidth, cellHeight } = this.game.getConfiguration();\r\n    // head\r\n    const size = (CELL_SIZE * SCALE) / 10;\r\n    const offset = (CELL_SIZE * SCALE) / 3;\r\n    const x = cellWidth * snake.getHead().x;\r\n    const y = cellHeight * snake.getHead().y;\r\n    context.fillStyle = \"#111111\";\r\n    context.fillRect(x, y, cellWidth, cellHeight);\r\n    // eyes\r\n    switch (snake.getDirection()) {\r\n      case \"Up\":\r\n        context.beginPath();\r\n        context.arc(x + offset, y + offset, size, 0, 2 * Math.PI, false);\r\n        context.arc(x + 2 * offset, y + offset, size, 0, 2 * Math.PI, false);\r\n        context.fillStyle = \"white\";\r\n        context.fill();\r\n        break;\r\n      case \"Down\":\r\n        context.beginPath();\r\n        context.arc(x + offset, y + 2 * offset, size, 0, 2 * Math.PI, false);\r\n        context.arc(\r\n          x + 2 * offset,\r\n          y + 2 * offset,\r\n          size,\r\n          0,\r\n          2 * Math.PI,\r\n          false\r\n        );\r\n        context.fillStyle = \"white\";\r\n        context.fill();\r\n        break;\r\n      case \"Right\":\r\n        context.beginPath();\r\n        context.arc(x + 2 * offset, y + offset, size, 0, 2 * Math.PI, false);\r\n        context.arc(\r\n          x + 2 * offset,\r\n          y + 2 * offset,\r\n          size,\r\n          0,\r\n          2 * Math.PI,\r\n          false\r\n        );\r\n        context.fillStyle = \"white\";\r\n        context.fill();\r\n        break;\r\n      case \"Left\":\r\n        context.beginPath();\r\n        context.arc(x + offset, y + offset, size, 0, 2 * Math.PI, false);\r\n        context.arc(x + offset, y + 2 * offset, size, 0, 2 * Math.PI, false);\r\n        context.fillStyle = \"white\";\r\n        context.fill();\r\n        break;\r\n    }\r\n    // tail\r\n    context.fillStyle = \"#333333\";\r\n    const tail = snake.getTail();\r\n    tail.forEach(cell =>\r\n      context.fillRect(\r\n        cellWidth * cell.x,\r\n        cellHeight * cell.y,\r\n        cellWidth,\r\n        cellHeight\r\n      )\r\n    );\r\n  }\r\n\r\n  onKeyDown(event: KeyboardEvent) {\r\n    const snake = this.game.getSnake();\r\n    switch (event.key) {\r\n      case \"ArrowUp\":\r\n        event.preventDefault();\r\n        snake.setDirection(\"Up\");\r\n        break;\r\n      case \"ArrowDown\":\r\n        event.preventDefault();\r\n        snake.setDirection(\"Down\");\r\n        break;\r\n      case \"ArrowLeft\":\r\n        event.preventDefault();\r\n        snake.setDirection(\"Left\");\r\n        break;\r\n      case \"ArrowRight\":\r\n        event.preventDefault();\r\n        snake.setDirection(\"Right\");\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nconst createCanvas = (): HTMLCanvasElement => {\r\n  const container = document.getElementById(\"game\")!;\r\n  const canvas = document.createElement(\"Canvas\") as HTMLCanvasElement;\r\n  container.appendChild(canvas);\r\n\r\n  // canvas element size in the page\r\n  canvas.style.width = CELLS_HORIZONTAL * CELL_SIZE + \"px\";\r\n  canvas.style.height = CELLS_VERTICAL * CELL_SIZE + \"px\";\r\n\r\n  // image buffer size\r\n  canvas.width = CELLS_HORIZONTAL * CELL_SIZE * SCALE;\r\n  canvas.height = CELLS_VERTICAL * CELL_SIZE * SCALE;\r\n\r\n  return canvas;\r\n};\r\n\r\nconst createConfiguration = (canvas: HTMLCanvasElement): Configuration => {\r\n  return {\r\n    level: 0,\r\n    speed: SPEED,\r\n    width: canvas.width,\r\n    height: canvas.height,\r\n    nbCellsX: CELLS_HORIZONTAL,\r\n    nbCellsY: CELLS_VERTICAL,\r\n    cellWidth: canvas.width / CELLS_HORIZONTAL,\r\n    cellHeight: canvas.height / CELLS_VERTICAL,\r\n    apples: 5\r\n  };\r\n};\r\n\r\nconst canvas = createCanvas();\r\nconst configuration = createConfiguration(canvas);\r\nconst game = new Game(configuration);\r\n\r\nnew GameUI(canvas, game);\r\n"]}